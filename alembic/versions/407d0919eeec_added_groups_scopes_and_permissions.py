"""Added groups, scopes and permissions

Revision ID: 407d0919eeec
Revises: 30de4bdca25c
Create Date: 2020-10-01 11:21:44.524731

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from spire.utils.confparse import scope_conf

# revision identifiers, used by Alembic.
revision = "407d0919eeec"
down_revision = "30de4bdca25c"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "spire_oauth_scopes",
        sa.Column("api", sa.String(), nullable=False),
        sa.Column("scope", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("api", "scope", name=op.f("pk_spire_oauth_scopes")),
        sa.UniqueConstraint("scope", name=op.f("uq_spire_oauth_scopes_scope")),
    )
    op.create_table(
        "journal_permissions",
        sa.Column(
            "holder_type", sa.Enum("user", "group", name="holder_type"), nullable=False
        ),
        sa.Column("journal_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("holder_id", sa.String(), nullable=False),
        sa.Column("permission", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["journal_id"],
            ["journals.id"],
            name="fk_journal_permissions_journals_id",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["permission"],
            ["spire_oauth_scopes.scope"],
            name="fk_journal_permissions_spire_oauth_scopes_scope",
        ),
        sa.PrimaryKeyConstraint(
            "holder_type",
            "journal_id",
            "holder_id",
            "permission",
            name=op.f("pk_journal_permissions"),
        ),
    )
    op.create_unique_constraint(
        op.f("uq_journal_entries_id"), "journal_entries", ["id"]
    )
    op.create_unique_constraint(
        op.f("uq_journal_entry_tags_id"), "journal_entry_tags", ["id"]
    )
    op.create_unique_constraint(op.f("uq_journals_id"), "journals", ["id"])

    valid_keys = ["read", "update", "delete"]
    for key in valid_keys:
        op.execute(
            f"INSERT INTO spire_oauth_scopes VALUES('journals','journals.{key}','{scope_conf.get('journals')[key]}');"
        )
    # ### end Alembic commands ###

    # Add permissions for existing journals
    for key in valid_keys:
        op.execute(
            "INSERT INTO journal_permissions (holder_type, journal_id, holder_id, permission) "
            f"SELECT 'user', id as journal_id, bugout_user_id as holder_id, 'journals.{key}' FROM journals;"
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_journals_id"), "journals", type_="unique")
    op.drop_constraint(
        op.f("uq_journal_entry_tags_id"), "journal_entry_tags", type_="unique"
    )
    op.drop_constraint(op.f("uq_journal_entries_id"), "journal_entries", type_="unique")
    op.drop_table("journal_permissions")
    op.drop_table("spire_oauth_scopes")

    sa.Enum("user", "group", name="holder_type").drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
