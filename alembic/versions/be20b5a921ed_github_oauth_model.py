"""GitHub oauth model

Revision ID: be20b5a921ed
Revises: 18f599c5f3b8
Create Date: 2020-11-09 11:26:38.830175

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'be20b5a921ed'
down_revision = '18f599c5f3b8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('github_oauth_events',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('installation_id', sa.Integer(), nullable=False),
    sa.Column('installation_url', sa.String(), nullable=False),
    sa.Column('access_code', sa.String(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=True),
    sa.Column('access_token_expire_ts', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bugout_holder_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('bugout_secret', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', statement_timestamp())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', statement_timestamp())"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_github_oauth_events')),
    sa.UniqueConstraint('account_id', name=op.f('uq_github_oauth_events_account_id')),
    sa.UniqueConstraint('bugout_holder_id', name=op.f('uq_github_oauth_events_bugout_holder_id')),
    sa.UniqueConstraint('bugout_secret', name=op.f('uq_github_oauth_events_bugout_secret')),
    sa.UniqueConstraint('id', name=op.f('uq_github_oauth_events_id')),
    sa.UniqueConstraint('installation_id', name=op.f('uq_github_oauth_events_installation_id')),
    sa.UniqueConstraint('installation_url', name=op.f('uq_github_oauth_events_installation_url'))
    )
    op.create_table('github_diffs',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('comments_url', sa.String(), nullable=True),
    sa.Column('installation_id', sa.Integer(), nullable=False),
    sa.Column('terminal_hash', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['installation_id'], ['github_oauth_events.installation_id'], name='fk_github_diffs_installation_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_github_diffs')),
    sa.UniqueConstraint('id', name=op.f('uq_github_diffs_id'))
    )
    op.create_table('github_summaries',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('diff_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('terminal_hash', sa.String(), nullable=False),
    sa.Column('s3_uri', sa.String(), nullable=False),
    sa.Column('response_url', sa.String(), nullable=True),
    sa.Column('commented_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', statement_timestamp())"), nullable=False),
    sa.ForeignKeyConstraint(['diff_id'], ['github_diffs.id'], name='fk_github_summaries_diff_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_github_summaries')),
    sa.UniqueConstraint('id', name=op.f('uq_github_summaries_id'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('github_summaries')
    op.drop_table('github_diffs')
    op.drop_table('github_oauth_events')
    # ### end Alembic commands ###
